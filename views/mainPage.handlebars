<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
	<link href="css/bootstrap.css" rel="stylesheet">
	<link href="css/bootstrap-theme.css" rel="stylesheet">

	<link href="css/navbar.css" rel="stylesheet">
  <link href="css/main.css" rel="stylesheet">
  <link href="css/searchbar.css" rel="stylesheet">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp" crossorigin="anonymous">


 
  <script src="https://www.gstatic.com/firebasejs/5.0.3/firebase.js"></script>
  <script>
  // Initialize Firebase
  
</script>

  <script src="https://code.jquery.com/jquery.js"></script>
  <script src="/js/bootstrap.js"></script>


  <script type="text/javascript">
    // Firebase
    var config = {
     apiKey: "AIzaSyD3LN58BAvOG8ouHInfEzCKYmbwZI06gec",
     authDomain: "musaic-1c1c3.firebaseapp.com",
     databaseURL: "https://musaic-1c1c3.firebaseio.com",
     projectId: "musaic-1c1c3",
     storageBucket: "musaic-1c1c3.appspot.com",
     messagingSenderId: "287286942286"
    };
    firebase.initializeApp(config);

    const database = firebase.database();

    const key = 'users/'; // Gets all users

   database.ref(key).once('value', (snapshot) => {
    const users = snapshot.val();


    firebase.auth().onAuthStateChanged(function(user) {
     /* let currentUserKey = firebase.auth().currentUser.uid;
      console.log(currentUserKey);
    
      if (user) {
        // User is signed in.
        alert("please enter a username");
        console.log("here");
        } */
        Object.keys(users).forEach((name) => {
        if (users[name].displayName === "None") {
            console.log("No user name");
            let userName = prompt("You have no display name...please enter one:");
            while (userName === "") {
              userName = prompt("Name is empty...please enter a name");
            } 
            database.ref(key + userName).set({displayName: userName});

            database.ref(key + userName).update({displayName: userName, image: users[name].image, topArtist: users[name].topArtist, topArtist2: users[name].topArtist2, topArtist3: users[name].topArtist3, topArtist4: users[name].topArtist4, topArtist5: users[name].topArtist5, 

              topSong: users[name].topSong, topSong2: users[name].topSong2, topSong3: users[name].topSong3, topSong4: users[name].topSong4, topSong5: users[name].topSong5, 

              topSongID: users[name].topSongID, topSongID2: users[name].topSongID2, topSongID3: users[name].topSongID3, topSongID4: users[name].topSongID4, topSongID5: users[name].topSongID5, 


              topSongArtist: users[name].topSongArtist, topSongArtist2: users[name].topSongArtist2, topSongArtist3: users[name].topSongArtist3, topSongArtist4: users[name].topSongArtist4, topSongArtist5: users[name].topSongArtist5, 

              topSongCover: users[name].topSongCover, topSongCover2: users[name].topSongCover2, topSongCover3: users[name].topSongCover3,  
              topSongCover4: users[name].topSongCover4,  topSongCover5: users[name].topSongCover5,  

              topSongPrev: users[name].topSongPrev, topSongPrev2: users[name].topSongPrev2, topSongPrev3: users[name].topSongPrev3, topSongPrev4: users[name].topSongPrev4, topSongPrev5: users[name].topSongPrev5, 

              topArtistID: users[name].topArtistID,  topArtistID2: users[name].topArtistID2,topArtistID3: users[name].topArtistID3, 
              topArtistID4: users[name].topArtistID4, topArtistID5: users[name].topArtistID5,

              id: users[name].userId

            });
            database.ref(key+"None").remove();
            location.reload();
            }
        });              
      
    });

   

  $(document).ready(()=>{
   
    console.log(users);
    console.log(users.topSong);

    const toAdd = document.createDocumentFragment();
    let index = 0;

    if (users) {
      //Loops through all users
      Object.keys(users).forEach((name) => {
        const newLi = document.createElement('div');

        let userName = 'userName' + index;
        let songName = 'songName' + index;
        let artistName = 'artistName' + index;
        let pic = 'pic' + index;
        let chatText = 'chatText' + index;
        let clockText = 'clockText' + index;
        let transparentBoxColor = 'transparentBoxColor' + index;
        

        //Template for Square Boxes
        // <a href='/profile'> reimplement </a> reimplement by wrapping around image
        newLi.innerHTML = "<div class='col-sm-4 grow profile profileBeg' id='profile'"+index+"><h3 class='userNameText profileText' id='"+userName+"'></h3><h4 class='songNameText profileText' id='"+songName+"' ></h4><h4 class='artistNameText profileText' id='"+artistName+"'></h4><div class='transparentBox' id='"+transparentBoxColor+"'></div><img class='profilePic col-sm-2' id='"+pic+"'><img class='icon chatBubble' src='css/Icons/chatBubble.png'><h5 class='chatNumber' id='"+chatText+"'></h5><img class='icon clock' src='css/Icons/clock.png'><h5 class='clockNumber' id='"+clockText+"'></h5></div></div>";

        toAdd.appendChild(newLi);
        index = index +1;

        console.log(users[name].topSong);
      });

      // Adds all the squares into the HTML
      document.getElementById('allProfiles').appendChild(toAdd); 

      index = 0; //reset index

      // Gets info from the database to fill in the newly created squares
      Object.keys(users).forEach((name) => {

        //Color changer
        if (index % 2 === 1) {
          $('#transparentBoxColor' + index).css("background-color", "#c7374a");
        }

        $('#userName' + index).html(users[name].displayName);
        $('#songName' + index).html(users[name].topSong);


        //adds variables to each song for when people click on it
        if(users[name].topSongPrev){
          $('#songName' + index).attr("data-prev_url", users[name].topSongPrev);
          $('#songName' + index).attr("data-songName", users[name].topSong);
          $('#songName' + index).attr("data-topSongArtist", users[name].topSongArtist);
          $('#songName' + index).attr("data-topSongID", users[name].topSongID);
          $('#songName' + index).attr("data-topSongCover", users[name].topSongCover);
          console.log("SONG PREVIEW ADDED");
          console.log($('#songName' + index).attr("data-prev_url"));
        }

        $('#artistName' + index).html(users[name].topSongArtist);
        if (users[name].image) {
          $('#pic' + index).attr('src', users[name].image);
        }

        else {
          $('#pic' + index).attr('src', 'css/ProfilePics/userDefault.png');
        }

        // Populate menu bar profile
        if ("{{sess_display_name}}" === users[name].displayName) {
          $('#menuProfile').attr('src', users[name].image);
                  console.log("Firebase ID: " + "{{sess_user_id}}");
                  console.log("Username: " + "{{sess_display_name}}");

        }

        //$('#chatText' + index).html(e.chat);
        //$('#clockText' + index).html(e.time);
        index = index + 1;
      });
    }

   });
      
        $('.userNameText').click(() => {
          console.log("Hi");
        });

        //Overflow check
        $('.songNameText').hover(() => {
        /*  console.log($(this).attr('id'));
          //$('.songNameText').css("background-color", "#4388ff");

          console.log("hover");
          console.log(document.getElementsByClassName('songNameText')[0].scrollWidth);
          console.log(document.getElementsByClassName('songNameText')[0].offsetWidth);

          console.log(document.getElementsByClassName('transparentBox')[0].offsetWidth); */
        });

        let playingCssClass = 'playing';
        let audioObject = null;
        let playing = false;
        let playingID = null;
        $('.songNameText').click((e) => {



          let target = e.target;
          console.log(target);
          console.log("Song Name Clicked");
          console.log("ID: "+target.id);
          console.log(target.innerHTML);
          console.log("Preview URL = "+target.getAttribute('data-prev_url')); 
          console.log("Song Name = "+target.getAttribute('data-songName')); 




          if (target.classList.contains(playingCssClass)) {
              audioObject.pause();
              playing=false;
          } else {
              if (audioObject) {
                  audioObject.pause();
                  playing = false
              }

          audioObject = new Audio(target.getAttribute('data-prev_url'));
          audioObject.play();
          playingID = target.getAttribute('data-topSongID');
          $("#play-btn").html("<i class='far fa-pause-circle'></i>");
          playing = true;

          target.classList.add(playingCssClass);

          console.log(target.getAttribute('data-songName'));
          console.log(target.getAttribute('data-topSongArtist'));

          $("#album-cover").attr("src", target.getAttribute('data-topSongCover'));
          $("#songTitle" ).html(target.getAttribute('data-songName'));
          $("#songArtist").html(target.getAttribute('data-topSongArtist'));


          audioObject.addEventListener('ended', function () {
              target.classList.remove(playingCssClass);
              playing = false;
          });
          audioObject.addEventListener('pause', function () {
               target.classList.remove(playingCssClass);
               playing = false;
          });


        }
      });


        

        $("#play-btn").click(() =>{

          if(playing == false){
              audioObject.play();
              $("#play-btn").html("<i class='far fa-pause-circle'></i>");
              playing = true;
             
            }else{
              audioObject.pause();
              $("#play-btn").html("<i class='far fa-play-circle'></i>");
              playing = false;
            }
        });

        $("#add-btn").click((e) => {
          e.preventDefault();
          console.log("PLAYING ID: "+playingID);

          $.ajax({
          url: 'https://api.spotify.com/v1/me/tracks?ids='+playingID,
          type: 'PUT',
          headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json',
              'Authorization': 'Bearer ' + "{{sess_access_token}}"
          },
          data: {
            //user's input
              ids:  playingID,
          },

          //response is the data received from spotify
          success: function (response) {
             
            console.log("Song added!");
            $("#add-btn").html("<i class='fas fa-check'></i>");
          }
    });
        });

        $("#topSong-btn").click(() =>{
            console.log("top song button clicked");

              index = 0; //reset index

      // Gets info from the database to fill in the newly created squares
      Object.keys(users).forEach((name) => {

        //Color changer
        if (index % 2 === 1) {
          $('#transparentBoxColor' + index).css("background-color", "#c7374a");
        }

        $('#userName' + index).html(users[name].displayName);
        $('#songName' + index).html(users[name].topSong);


        //adds variables to each song for when people click on it
        if(users[name].topSongPrev){
          $('#songName' + index).attr("data-prev_url", users[name].topSongPrev);
          $('#songName' + index).attr("data-songName", users[name].topSong);
          $('#songName' + index).attr("data-topSongArtist", users[name].topSongArtist);
          $('#songName' + index).attr("data-topSongID", users[name].topSongID);
          $('#songName' + index).attr("data-topSongCover", users[name].topSongCover);
        }

        $('#artistName' + index).html(users[name].topSongArtist);
        if (users[name].image) {
          $('#pic' + index).attr('src', users[name].image);
        }

        else {
          $('#pic' + index).attr('src', 'css/ProfilePics/userDefault.png');
        }
        //$('#chatText' + index).html(e.chat);
        //$('#clockText' + index).html(e.time);
        index = index + 1;
      });

            });

        $("#topArtist-btn").click(() =>{
            console.log("top artist button clicked");
          let index = 0; //reset index
          let index2 = 0;
          let audioObject = null;

      // Gets info from the database to fill in the newly created squares
      Object.keys(users).forEach((name) => {
          console.log("entered users key loop");
        //Color changer
        if (index % 2 === 1) {
          $('#transparentBoxColor' + index).css("background-color", "#c7374a");
        }

        console.log("Display name: "+users[name].displayName);

       

   //HUNTER'S COMMENTED OUT AJAX CALL FOR TOP ARTISTS TRACKS

        let songPreview;
        let songName;
         let songPreview2;
        let songName2;
       

        $.ajax({
          url: 'https://api.spotify.com/v1/artists/'+users[name].topArtistID+'/top-tracks',
          type: 'GET',
          headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json',
              'Authorization': 'Bearer ' + "{{sess_access_token}}"
          },
          data: {
            //user's input
              id:  users[name].topArtistID,
              country: "US"
          },

          //response is the data received from spotify
          success: function (response, body) {
             
             console.log("SUCCESS!   index="+index);

          $('#userName' + index).html(users[name].displayName);
         $('#songName' + index).html("1) "+users[name].topArtist);
         $('#artistName' + index).html("2) "+users[name].topArtist2);

            

            songPreview = response.tracks[0].preview_url;
            songName = response.tracks[0].name;
            songCover = response.tracks[0].album.images[2].url;

            $('#songName' + index).attr("data-prev_url", songPreview);
            $('#songName' + index).attr("data-songName", songName);
            $('#songName' + index).attr("data-topSongArtist", users[name].topArtist);
            $('#songName' + index).attr("data-topSongCover", songCover);

            if (users[name].image) {
          $('#pic' + index).attr('src', users[name].image);
        }

        else {
          $('#pic' + index).attr('src', 'css/ProfilePics/userDefault.png');
        }
            index = index + 1;

            //console.log("Top Artist song name "+$('#songName'+index).getAttribute('data-songName'));
        //   $('#songName' + index).attr("data-topSongArtist", users[name].topSongArtist);
        //   $('#songName' + index).attr("data-topSongID", users[name].topSongID);
        //   $('#songName' + index).attr("data-topSongCover", users[name].topSongCover);

            
          }
    });



         $.ajax({
          url: 'https://api.spotify.com/v1/artists/'+users[name].topArtistID2+'/top-tracks',
          type: 'GET',
          headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json',
              'Authorization': 'Bearer ' + "{{sess_access_token}}"
          },
          data: {
            //user's input
              id:  users[name].topArtistID2,
              country: "US"
          },

          //response is the data received from spotify
          success: function (response, body) {
             
            

            

            songPreview2 = response.tracks[0].preview_url;
            songName2 = response.tracks[0].name;
            songCover2 = response.tracks[0].album.images[2].url;

            $('#artistName' + index2).attr("data-prev_url", songPreview2);
            $('#artistName' + index2).attr("data-songName", songName2);
            $('#artistName' + index2).attr("data-topSongArtist", users[name].topArtist2);
            $('#artistName' + index2).attr("data-topSongCover", songCover2);

            $('#artistName' + index2).addClass("artist2");

            
            index2 = index2 + 1;

            //console.log("Top Artist song name "+$('#songName'+index).getAttribute('data-songName'));
        //   $('#songName' + index).attr("data-topSongArtist", users[name].topSongArtist);
        //   $('#songName' + index).attr("data-topSongID", users[name].topSongID);
        //   $('#songName' + index).attr("data-topSongCover", users[name].topSongCover);

            
          }
    });


            

           

        //  if(users[name].topSongPrev){
        //   $('#songName' + index).attr("data-prev_url", users[name].topSongPrev);
        //   $('#songName' + index).attr("data-songName", users[name].topSong);
        //   $('#songName' + index).attr("data-topSongArtist", users[name].topSongArtist);
        //   $('#songName' + index).attr("data-topSongID", users[name].topSongID);
        //   $('#songName' + index).attr("data-topSongCover", users[name].topSongCover);
        //   console.log("SONG PREVIEW ADDED");
        //   console.log($('#songName' + index).attr("data-prev_url"));
        // }

       
        //$('#chatText' + index).html(e.chat);
        //$('#clockText' + index).html(e.time);
        
      });



$('.artist2').click((e) => {



          let target = e.target;
          console.log(target);
          console.log("Song Name Clicked");
          console.log("ID: "+target.id);
          console.log(target.innerHTML);
          console.log("Preview URL = "+target.getAttribute('data-prev_url')); 
          console.log("Song Name = "+target.getAttribute('data-songName')); 




          if (target.classList.contains(playingCssClass)) {
              audioObject.pause();
              playing=false;
          } else {
              if (audioObject) {
                  audioObject.pause();
                  playing = false
              }

          audioObject = new Audio(target.getAttribute('data-prev_url'));
          audioObject.play();
          playingID = target.getAttribute('data-topSongID');
          $("#play-btn").html("<i class='far fa-pause-circle'></i>");
          playing = true;

          target.classList.add(playingCssClass);

          

          $("#album-cover").attr("src", target.getAttribute('data-topSongCover'));
          $("#songTitle" ).html(target.getAttribute('data-songName'));
          $("#songArtist").html(target.getAttribute('data-topSongArtist'));


          audioObject.addEventListener('ended', function () {
              target.classList.remove(playingCssClass);
              playing = false;
          });
          audioObject.addEventListener('pause', function () {
               target.classList.remove(playingCssClass);
               playing = false;
          });


        }
      });
            });
       
        

    }); 
  </script>
</head>

<body>

  <!-- Hamburger Menu -->
	<nav role="navigation">
		<div id="menuToggle">
   	 		<!-- A fake / hidden checkbox is used as click reciever, so you can use the :checked selector on it.-->
 	   		
 	   		<input type="checkbox" />
    
 	   		<!--Some spans to act as a hamburger.-->
  	  		<span></span>
  	  		<span></span>
  	  		<span></span>
   	  		<ul id="menu">
            <img class="profilePic img-responsive center-block" id="menuProfile">
            <div class="menuText">
              <h4 class="text-center" id="menuWelcome">Welcome</h4>
              <h4 class="text-center">{{sess_display_name}}</h4>
            </div>
   	   			<a href="#" id="active"><li>Home</li></a>
   	   			<a href="community"><li>Community</li></a>
  	    		<!-- <a href="myProfile"><li>My Profile</li></a> -->
  	    		<!-- <a href="#"><li>Settings</li></a> -->
            <a href="/"><li>Sign Out</li></a>
   			</ul>
  		</div>
	</nav>

    <h1 class="text-center">Musaic</h1>

    <h3 class="text-center">Music Tastes</h3>

    <h2 class="text-center underline" id="topSong-btn">Top Songs</h2>
    <h2 class="text-center underline" id="topArtist-btn">Top Artists</h2>

    <!-- Div that holds all the profiles in the beginning -->
    <div class="container-fluid" id="allProfiles">
      <div class="profileBeg row">
      </div>
    </div>


  <div class="navbar">
    <img id="album-cover" src="css/icons/music_note.png"></img>
    <a href="#" id="play-btn"><i class="far fa-play-circle"></i></a>

    <a href="#" id="add-btn"><i class="fas fa-plus"></i></a>
    <p id="songTitle"> Not Playing</p>
    <p id="songArtist"></p>


  </div>

</body>
</html>
